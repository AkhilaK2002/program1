#include <iostream>
using namespace std;

class Array {
private:
    int *row_indices;
    int *col_indices;
    int *values;
    int non_zero_count;
    int max_size;
    int rows, cols;

public:
     Array(int r, int c, int max_non_zeros) : rows(r), cols(c), max_size(max_non_zeros) {
        row_indices = new int[max_size];
        col_indices = new int[max_size];
        values = new int[max_size];
        non_zero_count = 0;
    }

    // Function to insert a new element
    void insert(int r, int c, int v) {
        if (v == 0) return; 
        if (non_zero_count >= max_size) {
            cout << "Matrix storage is full. Cannot insert more elements." << endl;
            return;
        }
        row_indices[non_zero_count] = r;
        col_indices[non_zero_count] = c;
        values[non_zero_count] = v;
        non_zero_count++;
    }

    // Function to display the matrix
    void display() {
        int k = 0;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (k < non_zero_count && row_indices[k] == i && col_indices[k] == j) {
                    cout << values[k] << " ";
                    k++;
                } else {
                    cout << "0 ";
                }
            }
            cout << endl;
        }
    }

    ~ Array() {
        delete[] row_indices;
        delete[] col_indices;
        delete[] values;
    }
};

int main() {
     Array sm(4, 5, 5); 

    sm.insert(0, 0, 1);
    sm.insert(1, 1, 2);
    sm.insert(2, 2, 3);
    sm.insert(3, 3, 4);

    cout << " Array:" << endl;
    sm.display();

    return 0;
}
