#include <iostream>
using namespace std;

struct Node {
    int row;
    int col;
    int value;
    Node* next;
};

class Linkedlist {
private:
    int rows, cols;
    Node* head;

public:
   Linkedlist(int r, int c) : rows(r), cols(c), head(nullptr) {}

    ~Linkedlist() {
        Node* current = head;
        while (current != nullptr) {
            Node* temp = current;
            current = current->next;
            delete temp;
        }
    }

    void insert(int r, int c, int val) {
        if (val == 0) return; 
        Node* newNode = new Node();
        newNode->row = r;
        newNode->col = c;
        newNode->value = val;
        newNode->next = nullptr;

        if (head == nullptr) {
            head = newNode;
        } else {
            Node* current = head;
            Node* prev = nullptr;

            while (current != nullptr && (current->row < r || (current->row == r && current->col < c))) {
                prev = current;
                current = current->next;
            }

            if (prev == nullptr) {
                newNode->next = head;
                head = newNode;
            } else {
                newNode->next = prev->next;
                prev->next = newNode;
            }
        }
    }

    void display() {
        Node* current = head;
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                if (current != nullptr && current->row == i && current->col == j) {
                    cout << current->value << " ";
                    current = current->next;
                } else {
                    cout << "0 ";
                }
            }
            cout << endl;
        }
    }
};

int main() {
    Linkedlist li(4, 5); 
    li.insert(0, 1, 5);
    li.insert(1, 3, 5);
    li.insert(2, 2, 20);
    li.insert(3, 4, 55);

    cout << "Linkedlist:" << endl;
    li.display();

    return 0;
}
